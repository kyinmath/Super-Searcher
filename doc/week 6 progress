Implemented console output in inputtable format.
Added braces to the input format, so that all well-formed ASTs can now be input.
Cleaned up console input significantly; it now uses a get_token() command.
Cleaned up several segfaults.
Added "quiet" mode to facilitate profiling. "Quiet mode" still has "Hello world!" outputs, but I'll leave it as is for now.
I profiled it. Turns out llvm JIT is slow. The picture is in "doc/profiling information.png". The relevant count is in the "Self" column, and the thing to note is that almost all the heaviest functions are llvm functions.
	AST generation takes ~0.2% of the time. So LLVM is the real bottleneck.
fuzztester chooses branches more intelligently to avoid birthday problem collisions, which prevent multiple-field ASTs like if() and concatenate() from receiving good coverage. In addition, this enhances overall coverage while keeping AST sizes to a more manageable level.

Right now, the fuzztester segfaults because it's testing an unfinished AST branch (the "dynamic" pointer, which I'm working on). This is easily fixed by changing a single line, "unsigned tag = mersenne() % ASTn("never reached");" to "unsigned tag = mersenne() % ASTn("dynamic");", if you so wish.


Makefile now automatically removes the core file, since Ubuntu has a bug where core dumps don't overwrite previous core dumps. This may not be a good thing for everyone.

todo: check if unreachable is really working by placing one in main


add ({int i; i = 0; return i}, 5);