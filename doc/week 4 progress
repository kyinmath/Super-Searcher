Overhauled the constexpr enum to support rare modifiers, so types.h is cleaner. The enums represent more info and don't duplicate information.
Compile system automatically checks the type information, so there's less code needed for individual cases, and less potential for careless bugs.
	Fixed a lot of bugs caused by my automatic type checking. ¯\_(ツ)_/¯

Implemented console input. Write code on the console, and the code will compile and run (command is ./toy console). The console works like this:
[integer 5]int_load [if [integer 1] [copy int_load] [integer 6]]

Each [] represents an AST. The structure is [tag field1 field2 field3 field4]name. So the first AST is an integer load of 5, with the variable name "int_load". The second AST is an if statement whose condition value is 1, so it evaluates to true and runs the "copy int_load" function. Then, the result of this copy is returned.

Right now, it segfaults easily. For example, this will segfault:
[if [random] [random] [random]] [add [random] [random]]

Anything using [random] will segfault, but that's just because I put some segfaulting debug code in the [random] path - it doesn't mean anything special. [random] works fine.
It seems my CreateStore() call is causing trouble. I am figuring out what is going on - it appears to be llvm's debug helper function (Module.dump()) which is segfaulting, which seems odd to me.