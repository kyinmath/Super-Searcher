move the fuzzer into AST format
	getting types of ASTs
		which requires being able to look at types.
	how to figure out the internals of dynamic objects? since we don't have function parameters, we'll need to use global pointers to pass data.
test coverage. we need to know that all ASTs are run. for example, load_tag doesn't have any coverage. neither does dyn_subobj for unknown pointers and unknown vectors.
serialization/snapshots. judgment MUST iterate very quickly. for example, when swinging a tennis racquet, you readjust after every shot.


we must always consider bootstrap issues. for example, how to make a function that returns compiled functions with fixed type?
	if there's no guaranteed mechanism, then such a function would need a static object to substitute. and it's unlikely the judgment function is able to construct these dynamic objects on the fly.

how do we ever get a regular pointer from a dynamic pointer?


maybe we need a shift operator. because mult + shift-right = win.
