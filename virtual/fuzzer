_temp_pointer_function_vector[imv pointer_to_vec_of_functions]
_temp_function_vector[load_subobj temp_pointer_function_vector [zero]]
_iterations[imv 100]
_main_loop[label]
	_int_function_choice[random]
	
	_function[load_subobj temp_function_vector [urem int_function_choice [vecsz temp_function_vector]]]
	_function_modification_start[label]
	_base_AST[load_subobj function [zero]]
	_AST_sequence[nvec [typeof [convert_to_AST [zero]]]]
	_offset_sequence[nvec [typeof [zero]]]
	_find_deeper_AST[label]
	_pointer_to_current_AST[tmp_pointer [pointer base_AST]]
	_done_finding[label {
	_current_AST[load_subobj pointer_to_current_AST [zero]]
	[agency2 [zero] [imv 8888]]
	[agency2 [zero] current_AST]
	[if current_AST
		{
			[agency2 [zero] [imv 999]]
			_BB_try[load_vector_from_BB current_AST
			{
				[agency2 [zero] [imv 4444]]
				[if [lessu [random] [imv 9223372036854775807]] {
					_old_vec_size[vecsz BB_try]
					[vecpb AST_sequence current_AST]
					[vecpb offset_sequence old_vec_size]
					[vecpb BB_try [convert_to_AST [zero]]]
					_AST_new_BB_try[load_subobj_ref BB_try old_vec_size {[store pointer_to_current_AST [pointer AST_new_BB_try]] [agency2 [zero] [imv 400]]}] _time_to_do_work[goto done_finding]}]
				_chosen_BB_offset[urem [random] [vecsz BB_try]]
				_AST_BB_try[load_subobj_ref BB_try chosen_BB_offset
					[if AST_BB_try
					_success{[vecpb AST_sequence current_AST] [vecpb offset_sequence chosen_BB_offset] [store pointer_to_current_AST [pointer AST_BB_try]]
					[if [lessu [random] [imv 9223372036854775807]] [goto find_deeper_AST] time_to_do_work]
					}]]}]
			_imv_try[load_imv_from_AST current_AST
				{_dynamic_contain[dyn_subobj imv_try [zero] [label]
				{
				[if [lessu [imv 4294967296] dynamic_contain]
				[store dynamic_contain [multiply [ushr dynamic_contain [imv 32]] [ushr [random] [imv 31]]]]
				[store dynamic_contain [ushr [multiply dynamic_contain [ushr [random] [imv 47]]] [imv 48]]]
				]
				}]}]
			_chosen_offset[urem [random] [system2 [zero] [load_tag current_AST]]]
			_AST_try[load_subobj_ref current_AST chosen_offset
				[if AST_try
				{[vecpb AST_sequence current_AST] [vecpb offset_sequence chosen_offset] [store pointer_to_current_AST [pointer AST_try]]
				[if [lessu [random] [imv 9223372036854775807]] [goto find_deeper_AST] time_to_do_work]}
			]]
		}
	]
	}
	]
	_tag[urem [random] [system1 [zero]]]
	[if tag
		_nonzerotag{
		[if [subtract tag [imv 1]]
		_make_mini_basicblock{
			_mini_BB[nvec [typeof [convert_to_AST [zero]]]] [vecpb mini_BB [convert_to_AST [zero]]] [vecpb mini_BB [load_subobj pointer_to_current_AST [zero]]] [store pointer_to_current_AST [convert_to_AST [imv 1] mini_BB]]
			_second_BB_element[load_subobj_ref [load_subobj pointer_to_current_AST [zero]] [zero] {[store pointer_to_current_AST [pointer second_BB_element]]}]
			}]
		_real_valid{
			_fields[nvec [typeof [convert_to_AST [zero]]]]
			_increm[system2 [zero] tag]
			_push_field_start[label]
			_chosen_member[urem [random] [vecsz AST_sequence]]
			_chosen_AST_base[load_subobj AST_sequence chosen_member]
			_chosen_prev_offset[urem [random] [load_subobj offset_sequence chosen_member]]
			[vecpb fields _chosen_AST[load_subobj chosen_AST_base chosen_prev_offset]]
			[store increm [decrement increm]]
			[if increm [goto push_field_start]]
			[store pointer_to_current_AST [convert_to_AST tag fields]]
		}}
		[store pointer_to_current_AST [imv_AST [dynamify [random]]]]
	]
	
	_compilation_attempt[compile base_AST]
	[if function
		[if compilation_attempt {[overfunc function compilation_attempt] [agency2 [zero] [imv 6767]]}]
		[vecpb temp_function_vector compilation_attempt]
	]
	[agency2 [zero] [imv 911]]
	[agency2 [zero] [vecsz temp_function_vector]]
	[if [lessu [random] [imv 9223372036854775807]] [goto function_modification_start]]
	
	[store iterations [decrement iterations]]
	[if iterations [goto main_loop]]

\